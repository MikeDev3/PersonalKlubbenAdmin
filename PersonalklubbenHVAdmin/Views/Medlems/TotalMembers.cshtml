@model IEnumerable<PersonalklubbenHVAdmin.Models.Medlem>
@{
    ViewBag.Title = "Medlemmar historik";
}
<div class="alert alert-info alert-dismissable">
    <a class="panel-close close" data-dismiss="alert">×</a>
    <i class="fa fa-coffee"></i>
    <strong>Viktigt!</strong> För att se aktiva medlemmar år @DateTime.Now.Year. Klicka <strong> @Html.ActionLink("Här", "MedlemsIndex", "Medlems")</strong>.
</div>
<div class="input-group">
    <input aria-describedby="basic-addon1" class="form-control" type="text" id="myInput" onkeyup="myFunction()" placeholder="Sök efter namn..." title="Skriv in ett namn">
</div>

<h2 style="color: red; ">@Html.ValidationMessage("Felmeddelande")</h2>
<div class="counter"><p>Antal medlemmar:   </p> <h2 style="text-align: center;"><strong>@ViewBag.TotalMembers</strong></h2></div>

@if (Model.Count() > 0)
{
<div>

    <h2 style="font-family:'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif">Alla registrerade medlemmar</h2>


</div>
    <div class="table-wrapper-scroll-y my-custom-scrollbar">
        <table id="myTable" style="overflow-y: auto" class="table">
            <tr>

                <th class="th">Epost</th>
                <th class="th" style="text-decoration-line:underline; cursor: pointer" onclick="sortTable()">Namn</th>
                <th class="th" style="text-decoration-line:underline; cursor: pointer" onclick="sortInstitution()">Institution</th>
                <th class="th" style="text-decoration-line:underline; cursor: pointer" onclick="sortDate()">Medlem sedan</th>
                <th class="th" style="text-decoration-line:underline; cursor: pointer" onclick="sortValidDate()">Giltig till</th>
                <th class="th"></th>
                <th class="th" style="text-decoration-line:underline; cursor: pointer" onclick="sortMembershipStatus()">Medlemsstatus</th>

            </tr>

            @foreach (var item in Model)
            {
            <tr>
                <td style="font-weight: bold; font-style:italic">@Html.ActionLink((string)item.Epostadress, "ShowProfile", new { id = item.ID })</td>
                <td>@Html.DisplayFor(m => item.Förnamn) @Html.DisplayFor(m => item.Efternamn)</td>
                <td>@Html.DisplayFor(m => item.Institution)</td>
                <td>@(item.RegistreringsDatum.ToString("yyyy/MM/dd"))</td>
                <td>@(item.GiltighetsÅr.ToString("yyyy/MM/dd"))</td>

                <td>

                <a href="@Url.Action("DeleteMember", "Medlems", new { id = item.ID })" onclick="return confirm('Är du säker på att du vill radera denna medlem?');" class="blockBtn logoutBtnColor btn"><span class="glyphicon glyphicon-trash"></span> Radera</a>

                </td>

                @if (item.GiltighetsÅr.Year < DateTime.Now.Year)
                {
                    <td><a href="@Url.Action("UpdateMembership", "Medlems", new { id = item.ID })" class="editBtn logoutBtnColor btn"><span class="glyphicon glyphicon-cog"></span> Förnya medlemsskap</a> </td>

                }
                else
                {
                    <td style="text-align:center"><h4><span class="glyphicon glyphicon-saved"> Aktiv</span></h4> </td>
                }




            </tr>
            }



        </table>
    </div>
}
else
{
    <h2 style="color: red">Det verkar inte finnas några användare just nu.</h2>
}


<script>
    function myFunction() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>
<script>
    function sortTable() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("myTable");
        switching = true;

        while (switching) {
            switching = false;
            rows = table.rows;

            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;

                x = rows[i].getElementsByTagName("TD")[1];
                y = rows[i + 1].getElementsByTagName("TD")[1];
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }
</script>
<script>
    function sortDate() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("myTable");
        switching = true;
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("TD")[3];
                y = rows[i + 1].getElementsByTagName("TD")[3];
                //check if the two rows should switch place:
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    //if so, mark as a switch and break the loop:
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }
</script>
<script>
    function sortInstitution() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("myTable");
        switching = true;

        while (switching) {
            switching = false;
            rows = table.rows;

            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;

                x = rows[i].getElementsByTagName("TD")[2];
                y = rows[i + 1].getElementsByTagName("TD")[2];
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }
</script>
<script>
    function sortValidDate() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("myTable");
        switching = true;

        while (switching) {
            switching = false;
            rows = table.rows;

            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;

                x = rows[i].getElementsByTagName("TD")[4];
                y = rows[i + 1].getElementsByTagName("TD")[4];
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }
</script>
<script>
    function sortMembershipStatus() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("myTable");
        switching = true;

        while (switching) {
            switching = false;
            rows = table.rows;

            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;

                x = rows[i].getElementsByTagName("TD")[6];
                y = rows[i + 1].getElementsByTagName("TD")[6];
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }
</script>

